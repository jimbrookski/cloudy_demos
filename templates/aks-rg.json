{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string",
            "metadata": {
                "description": "Environment type, test/prod/dev"
            },
            "defaultValue": [
                "prod",
                "test",
                "dev"
            ]
        },
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D12s_v3",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.7.7",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of omsagent addon"
            }
        },
        "workspaceRegion": {
            "type": "string",
            "defaultValue": "East US",
            "metadata": {
                "description": "Specify the region for your OMS workspace"
            }
        },
        "omsWorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "Specify the resource id of the OMS workspace"
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of http application routing"
            }
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "agentPoolName": {
            "type": "string",
            "metadata": {
                "description": "The name for the agent pool"
            }
        },
        "sshPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "Public SSH key for accessing AKS agents"
            }
        },
        "logStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name for Bucket where Logs go. Will have environment prefixed"
            }
        },
        "logWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for Log Analytics Workspace. Will have environment prefixed"
            }
        },
        "omsLocation": {
            "type": "string",
            "metadata": {
                "description": "Location for Log Analytics"
            }
        }
    },
    "variables": {
        "resourceName": "[concat(parameters('environmentName'), '-', parameters('resourceName'))]",
        "dnsPrefix": "[concat(parameters('environmentName'), '-', parameters('dnsPrefix'))]",
        "agentPoolName": "[concat(parameters('environmentName'), parameters('agentPoolName'))]",
        "vnetSubnetId": "[concat(subscription().id, '/resourceGroups/',parameters('environmentName'),'-network-rg/providers/Microsoft.Network/virtualNetworks/',parameters('environmentName'),'-aks-vnet/subnets/aks')]",
        "logStorageAccountName": "[concat(parameters('environmentName'), parameters('logStorageAccountName'), uniqueString(subscription().id, resourceGroup().id))]",
        "logWorkspaceName": "[concat(parameters('environmentName'), '-', parameters('logWorkspaceName'), uniqueString(subscription().id, resourceGroup().id))]",
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('logStorageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('logStorageAccountName')]"
            },
            "sku": {
                "name": "Standard_GRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('logWorkspaceName')]",
            "apiVersion": "2017-03-15-preview",
            "location": "[parameters('omsLocation')]",
            "properties": {
                "sku": {
                    "Name": "Standalone"
                },
                "features": {
                    "searchVersion": 1
                }
            },
            "resources": [
                {
                    "name": "AzureActivityLog",
                    "type": "datasources",
                    "apiVersion": "2015-11-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', variables('logWorkspaceName'))]"
                    ],
                    "kind": "AzureActivityLog",
                    "properties": {
                        "linkedResourceId": "[concat(subscription().id, '/providers/Microsoft.Insights/eventTypes/management')]"
                    },
                    "location": "[parameters('omsLocation')]",
                    "dependsOn": [
                        "[variables('workspaceId')]"
                    ]
                },
                {
                    "apiVersion": "2015-11-01-preview",
                    "plan": {
                        "name": "[concat('Containers(',variables('logWorkspaceName'),')')]",
                        "publisher": "Microsoft",
                        "promotionCode": "",
                        "product": "OMSGallery/Containers"
                    },
                    "properties": {
                        "workspaceResourceId": "[variables('workspaceId')]"
                    },
                    "name": "[concat('Containers(',variables('logWorkspaceName'),')')]",
                    "type": "Microsoft.OperationsManagement/solutions",
                    "location": "[parameters('omsLocation')]",
                    "dependsOn": [
                        "[variables('workspaceId')]"
                    ]
                },
                {
                    "apiVersion": "2015-11-01-preview",
                    "plan": {
                        "name": "[concat('AzureActivity(',variables('logWorkspaceName'),')')]",
                        "publisher": "Microsoft",
                        "promotionCode": "",
                        "product": "OMSGallery/AzureActivity"
                    },
                    "properties": {
                        "workspaceResourceId": "[variables('workspaceId')]"
                    },
                    "name": "[concat('AzureActivity(',variables('logWorkspaceName'),')')]",
                    "type": "Microsoft.OperationsManagement/solutions",
                    "location": "[parameters('omsLocation')]",
                    "dependsOn": [
                        "[variables('workspaceId')]"
                    ]
                },
                {
                    "apiVersion": "2015-11-01-preview",
                    "plan": {
                        "name": "[concat('(',variables('logWorkspaceName'),')')]",
                        "publisher": "Microsoft",
                        "promotionCode": "",
                        "product": "OMSGallery/SecurityCenterFree"
                    },
                    "properties": {
                        "workspaceResourceId": "[variables('workspaceId')]"
                    },
                    "name": "[concat('(',variables('logWorkspaceName'),')')]",
                    "type": "Microsoft.OperationsManagement/solutions",
                    "location": "[parameters('omsLocation')]",
                    "dependsOn": [
                        "[variables('workspaceId')]"
                    ]
                }
            ]
        },
        {
            "apiVersion": "2018-03-31",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[variables('resourceName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[variables('dnsPrefix')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[variables('workspaceId')]"
                        }
                    }
                },
                "agentPoolProfiles": [
                    {
                        "name": "[variables('agentPoolName')]",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "vnetSubnetID": "[variables('vnetSubnetID')]"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "string",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[parameters('sshPublicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "ClientId": "[parameters('servicePrincipalClientId')]",
                    "Secret": "[parameters('servicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                }
            },
            "tags": {
                "environment": "[parameters('environmentName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('logWorkspaceName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SolutionDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[parameters('workspaceRegion')]",
                            "name": "[concat('ContainerInsights', '(', split(variables('workspaceId'),'/')[8], ')')]",
                            "properties": {
                                "workspaceResourceId": "[variables('workspaceId')]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', split(variables('workspaceId'),'/')[8], ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": []
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', variables('resourceName'))).fqdn]"
        }
    }
}